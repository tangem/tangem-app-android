// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dex.proto

package com.tangem.blockchain.blockchains.binance.proto;

/**
 * <pre>
 * please note the field name is the JSON name.
 * </pre>
 *
 * Protobuf type {@code transaction.Send}
 */
public  final class Send extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:transaction.Send)
    SendOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Send.newBuilder() to construct.
  private Send(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Send() {
    inputs_ = java.util.Collections.emptyList();
    outputs_ = java.util.Collections.emptyList();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Send(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              inputs_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Input>();
              mutable_bitField0_ |= 0x00000001;
            }
            inputs_.add(
                input.readMessage(com.tangem.blockchain.blockchains.binance.proto.Send.Input.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              outputs_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Output>();
              mutable_bitField0_ |= 0x00000002;
            }
            outputs_.add(
                input.readMessage(com.tangem.blockchain.blockchains.binance.proto.Send.Output.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        inputs_ = java.util.Collections.unmodifiableList(inputs_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        outputs_ = java.util.Collections.unmodifiableList(outputs_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tangem.blockchain.blockchains.binance.proto.Send.class, com.tangem.blockchain.blockchains.binance.proto.Send.Builder.class);
  }

  public interface TokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:transaction.Send.Token)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string denom = 1;</code>
     */
    String getDenom();
    /**
     * <code>string denom = 1;</code>
     */
    com.google.protobuf.ByteString
        getDenomBytes();

    /**
     * <code>int64 amount = 2;</code>
     */
    long getAmount();
  }
  /**
   * <pre>
   *    0x2A2C87FA   // hardcoded, object type prefix in 4 bytes
   * </pre>
   *
   * Protobuf type {@code transaction.Send.Token}
   */
  public  static final class Token extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:transaction.Send.Token)
      TokenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Token.newBuilder() to construct.
    private Token(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Token() {
      denom_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Token(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              denom_ = s;
              break;
            }
            case 16: {

              amount_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Token_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Token_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tangem.blockchain.blockchains.binance.proto.Send.Token.class, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder.class);
    }

    public static final int DENOM_FIELD_NUMBER = 1;
    private volatile Object denom_;
    /**
     * <code>string denom = 1;</code>
     */
    public String getDenom() {
      Object ref = denom_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      }
    }
    /**
     * <code>string denom = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDenomBytes() {
      Object ref = denom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <code>int64 amount = 2;</code>
     */
    public long getAmount() {
      return amount_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDenomBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, denom_);
      }
      if (amount_ != 0L) {
        output.writeInt64(2, amount_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDenomBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, denom_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tangem.blockchain.blockchains.binance.proto.Send.Token)) {
        return super.equals(obj);
      }
      com.tangem.blockchain.blockchains.binance.proto.Send.Token other = (com.tangem.blockchain.blockchains.binance.proto.Send.Token) obj;

      if (!getDenom()
          .equals(other.getDenom())) return false;
      if (getAmount()
          != other.getAmount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DENOM_FIELD_NUMBER;
      hash = (53 * hash) + getDenom().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tangem.blockchain.blockchains.binance.proto.Send.Token prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *    0x2A2C87FA   // hardcoded, object type prefix in 4 bytes
     * </pre>
     *
     * Protobuf type {@code transaction.Send.Token}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:transaction.Send.Token)
        com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Token_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Token_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tangem.blockchain.blockchains.binance.proto.Send.Token.class, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder.class);
      }

      // Construct using com.tangem.blockchain.blockchains.binance.proto.Send.Token.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        denom_ = "";

        amount_ = 0L;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Token_descriptor;
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token getDefaultInstanceForType() {
        return com.tangem.blockchain.blockchains.binance.proto.Send.Token.getDefaultInstance();
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token build() {
        com.tangem.blockchain.blockchains.binance.proto.Send.Token result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token buildPartial() {
        com.tangem.blockchain.blockchains.binance.proto.Send.Token result = new com.tangem.blockchain.blockchains.binance.proto.Send.Token(this);
        result.denom_ = denom_;
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tangem.blockchain.blockchains.binance.proto.Send.Token) {
          return mergeFrom((com.tangem.blockchain.blockchains.binance.proto.Send.Token)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tangem.blockchain.blockchains.binance.proto.Send.Token other) {
        if (other == com.tangem.blockchain.blockchains.binance.proto.Send.Token.getDefaultInstance()) return this;
        if (!other.getDenom().isEmpty()) {
          denom_ = other.denom_;
          onChanged();
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tangem.blockchain.blockchains.binance.proto.Send.Token parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tangem.blockchain.blockchains.binance.proto.Send.Token) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object denom_ = "";
      /**
       * <code>string denom = 1;</code>
       */
      public String getDenom() {
        Object ref = denom_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          denom_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string denom = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDenomBytes() {
        Object ref = denom_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          denom_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string denom = 1;</code>
       */
      public Builder setDenom(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        denom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string denom = 1;</code>
       */
      public Builder clearDenom() {

        denom_ = getDefaultInstance().getDenom();
        onChanged();
        return this;
      }
      /**
       * <code>string denom = 1;</code>
       */
      public Builder setDenomBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        denom_ = value;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <code>int64 amount = 2;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>int64 amount = 2;</code>
       */
      public Builder setAmount(long value) {

        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 amount = 2;</code>
       */
      public Builder clearAmount() {

        amount_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:transaction.Send.Token)
    }

    // @@protoc_insertion_point(class_scope:transaction.Send.Token)
    private static final com.tangem.blockchain.blockchains.binance.proto.Send.Token DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tangem.blockchain.blockchains.binance.proto.Send.Token();
    }

    public static com.tangem.blockchain.blockchains.binance.proto.Send.Token getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Token>
        PARSER = new com.google.protobuf.AbstractParser<Token>() {
      @Override
      public Token parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Token(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Token> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Token> getParserForType() {
      return PARSER;
    }

    @Override
    public com.tangem.blockchain.blockchains.binance.proto.Send.Token getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:transaction.Send.Input)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes address = 1;</code>
     */
    com.google.protobuf.ByteString getAddress();

    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token>
        getCoinsList();
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    com.tangem.blockchain.blockchains.binance.proto.Send.Token getCoins(int index);
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    int getCoinsCount();
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
        getCoinsOrBuilderList();
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder getCoinsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code transaction.Send.Input}
   */
  public  static final class Input extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:transaction.Send.Input)
      InputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Input.newBuilder() to construct.
    private Input(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Input() {
      address_ = com.google.protobuf.ByteString.EMPTY;
      coins_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Input(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              address_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                coins_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Token>();
                mutable_bitField0_ |= 0x00000002;
              }
              coins_.add(
                  input.readMessage(com.tangem.blockchain.blockchains.binance.proto.Send.Token.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          coins_ = java.util.Collections.unmodifiableList(coins_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Input_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Input_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tangem.blockchain.blockchains.binance.proto.Send.Input.class, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString address_;
    /**
     * <code>bytes address = 1;</code>
     */
    public com.google.protobuf.ByteString getAddress() {
      return address_;
    }

    public static final int COINS_FIELD_NUMBER = 2;
    private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> coins_;
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> getCoinsList() {
      return coins_;
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
        getCoinsOrBuilderList() {
      return coins_;
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public int getCoinsCount() {
      return coins_.size();
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Token getCoins(int index) {
      return coins_.get(index);
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder getCoinsOrBuilder(
        int index) {
      return coins_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!address_.isEmpty()) {
        output.writeBytes(1, address_);
      }
      for (int i = 0; i < coins_.size(); i++) {
        output.writeMessage(2, coins_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!address_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, address_);
      }
      for (int i = 0; i < coins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, coins_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tangem.blockchain.blockchains.binance.proto.Send.Input)) {
        return super.equals(obj);
      }
      com.tangem.blockchain.blockchains.binance.proto.Send.Input other = (com.tangem.blockchain.blockchains.binance.proto.Send.Input) obj;

      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!getCoinsList()
          .equals(other.getCoinsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      if (getCoinsCount() > 0) {
        hash = (37 * hash) + COINS_FIELD_NUMBER;
        hash = (53 * hash) + getCoinsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tangem.blockchain.blockchains.binance.proto.Send.Input prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code transaction.Send.Input}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:transaction.Send.Input)
        com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Input_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Input_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tangem.blockchain.blockchains.binance.proto.Send.Input.class, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder.class);
      }

      // Construct using com.tangem.blockchain.blockchains.binance.proto.Send.Input.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCoinsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        address_ = com.google.protobuf.ByteString.EMPTY;

        if (coinsBuilder_ == null) {
          coins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          coinsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Input_descriptor;
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Input getDefaultInstanceForType() {
        return com.tangem.blockchain.blockchains.binance.proto.Send.Input.getDefaultInstance();
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Input build() {
        com.tangem.blockchain.blockchains.binance.proto.Send.Input result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Input buildPartial() {
        com.tangem.blockchain.blockchains.binance.proto.Send.Input result = new com.tangem.blockchain.blockchains.binance.proto.Send.Input(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.address_ = address_;
        if (coinsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            coins_ = java.util.Collections.unmodifiableList(coins_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.coins_ = coins_;
        } else {
          result.coins_ = coinsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tangem.blockchain.blockchains.binance.proto.Send.Input) {
          return mergeFrom((com.tangem.blockchain.blockchains.binance.proto.Send.Input)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tangem.blockchain.blockchains.binance.proto.Send.Input other) {
        if (other == com.tangem.blockchain.blockchains.binance.proto.Send.Input.getDefaultInstance()) return this;
        if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
          setAddress(other.getAddress());
        }
        if (coinsBuilder_ == null) {
          if (!other.coins_.isEmpty()) {
            if (coins_.isEmpty()) {
              coins_ = other.coins_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCoinsIsMutable();
              coins_.addAll(other.coins_);
            }
            onChanged();
          }
        } else {
          if (!other.coins_.isEmpty()) {
            if (coinsBuilder_.isEmpty()) {
              coinsBuilder_.dispose();
              coinsBuilder_ = null;
              coins_ = other.coins_;
              bitField0_ = (bitField0_ & ~0x00000002);
              coinsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCoinsFieldBuilder() : null;
            } else {
              coinsBuilder_.addAllMessages(other.coins_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tangem.blockchain.blockchains.binance.proto.Send.Input parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tangem.blockchain.blockchains.binance.proto.Send.Input) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes address = 1;</code>
       */
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <code>bytes address = 1;</code>
       */
      public Builder setAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }

        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes address = 1;</code>
       */
      public Builder clearAddress() {

        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }

      private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> coins_ =
        java.util.Collections.emptyList();
      private void ensureCoinsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          coins_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Token>(coins_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tangem.blockchain.blockchains.binance.proto.Send.Token, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder> coinsBuilder_;

      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> getCoinsList() {
        if (coinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(coins_);
        } else {
          return coinsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public int getCoinsCount() {
        if (coinsBuilder_ == null) {
          return coins_.size();
        } else {
          return coinsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token getCoins(int index) {
        if (coinsBuilder_ == null) {
          return coins_.get(index);
        } else {
          return coinsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder setCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.set(index, value);
          onChanged();
        } else {
          coinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder setCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.set(index, builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(com.tangem.blockchain.blockchains.binance.proto.Send.Token value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.add(value);
          onChanged();
        } else {
          coinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.add(index, value);
          onChanged();
        } else {
          coinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(
          com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.add(builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.add(index, builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addAllCoins(
          Iterable<? extends com.tangem.blockchain.blockchains.binance.proto.Send.Token> values) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, coins_);
          onChanged();
        } else {
          coinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder clearCoins() {
        if (coinsBuilder_ == null) {
          coins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          coinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder removeCoins(int index) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.remove(index);
          onChanged();
        } else {
          coinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder getCoinsBuilder(
          int index) {
        return getCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder getCoinsOrBuilder(
          int index) {
        if (coinsBuilder_ == null) {
          return coins_.get(index);  } else {
          return coinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
           getCoinsOrBuilderList() {
        if (coinsBuilder_ != null) {
          return coinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(coins_);
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder addCoinsBuilder() {
        return getCoinsFieldBuilder().addBuilder(
            com.tangem.blockchain.blockchains.binance.proto.Send.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder addCoinsBuilder(
          int index) {
        return getCoinsFieldBuilder().addBuilder(
            index, com.tangem.blockchain.blockchains.binance.proto.Send.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder>
           getCoinsBuilderList() {
        return getCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tangem.blockchain.blockchains.binance.proto.Send.Token, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
          getCoinsFieldBuilder() {
        if (coinsBuilder_ == null) {
          coinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tangem.blockchain.blockchains.binance.proto.Send.Token, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>(
                  coins_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          coins_ = null;
        }
        return coinsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:transaction.Send.Input)
    }

    // @@protoc_insertion_point(class_scope:transaction.Send.Input)
    private static final com.tangem.blockchain.blockchains.binance.proto.Send.Input DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tangem.blockchain.blockchains.binance.proto.Send.Input();
    }

    public static com.tangem.blockchain.blockchains.binance.proto.Send.Input getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Input>
        PARSER = new com.google.protobuf.AbstractParser<Input>() {
      @Override
      public Input parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Input(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Input> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Input> getParserForType() {
      return PARSER;
    }

    @Override
    public com.tangem.blockchain.blockchains.binance.proto.Send.Input getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:transaction.Send.Output)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes address = 1;</code>
     */
    com.google.protobuf.ByteString getAddress();

    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token>
        getCoinsList();
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    com.tangem.blockchain.blockchains.binance.proto.Send.Token getCoins(int index);
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    int getCoinsCount();
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
        getCoinsOrBuilderList();
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder getCoinsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code transaction.Send.Output}
   */
  public  static final class Output extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:transaction.Send.Output)
      OutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Output.newBuilder() to construct.
    private Output(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Output() {
      address_ = com.google.protobuf.ByteString.EMPTY;
      coins_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Output(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              address_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                coins_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Token>();
                mutable_bitField0_ |= 0x00000002;
              }
              coins_.add(
                  input.readMessage(com.tangem.blockchain.blockchains.binance.proto.Send.Token.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          coins_ = java.util.Collections.unmodifiableList(coins_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Output_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Output_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tangem.blockchain.blockchains.binance.proto.Send.Output.class, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString address_;
    /**
     * <code>bytes address = 1;</code>
     */
    public com.google.protobuf.ByteString getAddress() {
      return address_;
    }

    public static final int COINS_FIELD_NUMBER = 2;
    private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> coins_;
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> getCoinsList() {
      return coins_;
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
        getCoinsOrBuilderList() {
      return coins_;
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public int getCoinsCount() {
      return coins_.size();
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Token getCoins(int index) {
      return coins_.get(index);
    }
    /**
     * <code>repeated .transaction.Send.Token coins = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder getCoinsOrBuilder(
        int index) {
      return coins_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!address_.isEmpty()) {
        output.writeBytes(1, address_);
      }
      for (int i = 0; i < coins_.size(); i++) {
        output.writeMessage(2, coins_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!address_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, address_);
      }
      for (int i = 0; i < coins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, coins_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tangem.blockchain.blockchains.binance.proto.Send.Output)) {
        return super.equals(obj);
      }
      com.tangem.blockchain.blockchains.binance.proto.Send.Output other = (com.tangem.blockchain.blockchains.binance.proto.Send.Output) obj;

      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!getCoinsList()
          .equals(other.getCoinsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      if (getCoinsCount() > 0) {
        hash = (37 * hash) + COINS_FIELD_NUMBER;
        hash = (53 * hash) + getCoinsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tangem.blockchain.blockchains.binance.proto.Send.Output prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code transaction.Send.Output}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:transaction.Send.Output)
        com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Output_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tangem.blockchain.blockchains.binance.proto.Send.Output.class, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder.class);
      }

      // Construct using com.tangem.blockchain.blockchains.binance.proto.Send.Output.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCoinsFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        address_ = com.google.protobuf.ByteString.EMPTY;

        if (coinsBuilder_ == null) {
          coins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          coinsBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_Output_descriptor;
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Output getDefaultInstanceForType() {
        return com.tangem.blockchain.blockchains.binance.proto.Send.Output.getDefaultInstance();
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Output build() {
        com.tangem.blockchain.blockchains.binance.proto.Send.Output result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public com.tangem.blockchain.blockchains.binance.proto.Send.Output buildPartial() {
        com.tangem.blockchain.blockchains.binance.proto.Send.Output result = new com.tangem.blockchain.blockchains.binance.proto.Send.Output(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.address_ = address_;
        if (coinsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            coins_ = java.util.Collections.unmodifiableList(coins_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.coins_ = coins_;
        } else {
          result.coins_ = coinsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tangem.blockchain.blockchains.binance.proto.Send.Output) {
          return mergeFrom((com.tangem.blockchain.blockchains.binance.proto.Send.Output)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tangem.blockchain.blockchains.binance.proto.Send.Output other) {
        if (other == com.tangem.blockchain.blockchains.binance.proto.Send.Output.getDefaultInstance()) return this;
        if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
          setAddress(other.getAddress());
        }
        if (coinsBuilder_ == null) {
          if (!other.coins_.isEmpty()) {
            if (coins_.isEmpty()) {
              coins_ = other.coins_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCoinsIsMutable();
              coins_.addAll(other.coins_);
            }
            onChanged();
          }
        } else {
          if (!other.coins_.isEmpty()) {
            if (coinsBuilder_.isEmpty()) {
              coinsBuilder_.dispose();
              coinsBuilder_ = null;
              coins_ = other.coins_;
              bitField0_ = (bitField0_ & ~0x00000002);
              coinsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCoinsFieldBuilder() : null;
            } else {
              coinsBuilder_.addAllMessages(other.coins_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tangem.blockchain.blockchains.binance.proto.Send.Output parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tangem.blockchain.blockchains.binance.proto.Send.Output) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes address = 1;</code>
       */
      public com.google.protobuf.ByteString getAddress() {
        return address_;
      }
      /**
       * <code>bytes address = 1;</code>
       */
      public Builder setAddress(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }

        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes address = 1;</code>
       */
      public Builder clearAddress() {

        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }

      private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> coins_ =
        java.util.Collections.emptyList();
      private void ensureCoinsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          coins_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Token>(coins_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tangem.blockchain.blockchains.binance.proto.Send.Token, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder> coinsBuilder_;

      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token> getCoinsList() {
        if (coinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(coins_);
        } else {
          return coinsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public int getCoinsCount() {
        if (coinsBuilder_ == null) {
          return coins_.size();
        } else {
          return coinsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token getCoins(int index) {
        if (coinsBuilder_ == null) {
          return coins_.get(index);
        } else {
          return coinsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder setCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.set(index, value);
          onChanged();
        } else {
          coinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder setCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.set(index, builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(com.tangem.blockchain.blockchains.binance.proto.Send.Token value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.add(value);
          onChanged();
        } else {
          coinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token value) {
        if (coinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoinsIsMutable();
          coins_.add(index, value);
          onChanged();
        } else {
          coinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(
          com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.add(builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addCoins(
          int index, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder builderForValue) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.add(index, builderForValue.build());
          onChanged();
        } else {
          coinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder addAllCoins(
          Iterable<? extends com.tangem.blockchain.blockchains.binance.proto.Send.Token> values) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, coins_);
          onChanged();
        } else {
          coinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder clearCoins() {
        if (coinsBuilder_ == null) {
          coins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          coinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public Builder removeCoins(int index) {
        if (coinsBuilder_ == null) {
          ensureCoinsIsMutable();
          coins_.remove(index);
          onChanged();
        } else {
          coinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder getCoinsBuilder(
          int index) {
        return getCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder getCoinsOrBuilder(
          int index) {
        if (coinsBuilder_ == null) {
          return coins_.get(index);  } else {
          return coinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
           getCoinsOrBuilderList() {
        if (coinsBuilder_ != null) {
          return coinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(coins_);
        }
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder addCoinsBuilder() {
        return getCoinsFieldBuilder().addBuilder(
            com.tangem.blockchain.blockchains.binance.proto.Send.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder addCoinsBuilder(
          int index) {
        return getCoinsFieldBuilder().addBuilder(
            index, com.tangem.blockchain.blockchains.binance.proto.Send.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .transaction.Send.Token coins = 2;</code>
       */
      public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder>
           getCoinsBuilderList() {
        return getCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tangem.blockchain.blockchains.binance.proto.Send.Token, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>
          getCoinsFieldBuilder() {
        if (coinsBuilder_ == null) {
          coinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tangem.blockchain.blockchains.binance.proto.Send.Token, com.tangem.blockchain.blockchains.binance.proto.Send.Token.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.TokenOrBuilder>(
                  coins_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          coins_ = null;
        }
        return coinsBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:transaction.Send.Output)
    }

    // @@protoc_insertion_point(class_scope:transaction.Send.Output)
    private static final com.tangem.blockchain.blockchains.binance.proto.Send.Output DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tangem.blockchain.blockchains.binance.proto.Send.Output();
    }

    public static com.tangem.blockchain.blockchains.binance.proto.Send.Output getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Output>
        PARSER = new com.google.protobuf.AbstractParser<Output>() {
      @Override
      public Output parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Output(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Output> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Output> getParserForType() {
      return PARSER;
    }

    @Override
    public com.tangem.blockchain.blockchains.binance.proto.Send.Output getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int INPUTS_FIELD_NUMBER = 1;
  private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Input> inputs_;
  /**
   * <code>repeated .transaction.Send.Input inputs = 1;</code>
   */
  public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Input> getInputsList() {
    return inputs_;
  }
  /**
   * <code>repeated .transaction.Send.Input inputs = 1;</code>
   */
  public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder>
      getInputsOrBuilderList() {
    return inputs_;
  }
  /**
   * <code>repeated .transaction.Send.Input inputs = 1;</code>
   */
  public int getInputsCount() {
    return inputs_.size();
  }
  /**
   * <code>repeated .transaction.Send.Input inputs = 1;</code>
   */
  public com.tangem.blockchain.blockchains.binance.proto.Send.Input getInputs(int index) {
    return inputs_.get(index);
  }
  /**
   * <code>repeated .transaction.Send.Input inputs = 1;</code>
   */
  public com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder getInputsOrBuilder(
      int index) {
    return inputs_.get(index);
  }

  public static final int OUTPUTS_FIELD_NUMBER = 2;
  private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Output> outputs_;
  /**
   * <code>repeated .transaction.Send.Output outputs = 2;</code>
   */
  public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Output> getOutputsList() {
    return outputs_;
  }
  /**
   * <code>repeated .transaction.Send.Output outputs = 2;</code>
   */
  public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder>
      getOutputsOrBuilderList() {
    return outputs_;
  }
  /**
   * <code>repeated .transaction.Send.Output outputs = 2;</code>
   */
  public int getOutputsCount() {
    return outputs_.size();
  }
  /**
   * <code>repeated .transaction.Send.Output outputs = 2;</code>
   */
  public com.tangem.blockchain.blockchains.binance.proto.Send.Output getOutputs(int index) {
    return outputs_.get(index);
  }
  /**
   * <code>repeated .transaction.Send.Output outputs = 2;</code>
   */
  public com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder getOutputsOrBuilder(
      int index) {
    return outputs_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < inputs_.size(); i++) {
      output.writeMessage(1, inputs_.get(i));
    }
    for (int i = 0; i < outputs_.size(); i++) {
      output.writeMessage(2, outputs_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < inputs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, inputs_.get(i));
    }
    for (int i = 0; i < outputs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, outputs_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tangem.blockchain.blockchains.binance.proto.Send)) {
      return super.equals(obj);
    }
    com.tangem.blockchain.blockchains.binance.proto.Send other = (com.tangem.blockchain.blockchains.binance.proto.Send) obj;

    if (!getInputsList()
        .equals(other.getInputsList())) return false;
    if (!getOutputsList()
        .equals(other.getOutputsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getInputsCount() > 0) {
      hash = (37 * hash) + INPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getInputsList().hashCode();
    }
    if (getOutputsCount() > 0) {
      hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getOutputsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tangem.blockchain.blockchains.binance.proto.Send parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tangem.blockchain.blockchains.binance.proto.Send prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * please note the field name is the JSON name.
   * </pre>
   *
   * Protobuf type {@code transaction.Send}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:transaction.Send)
      com.tangem.blockchain.blockchains.binance.proto.SendOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tangem.blockchain.blockchains.binance.proto.Send.class, com.tangem.blockchain.blockchains.binance.proto.Send.Builder.class);
    }

    // Construct using com.tangem.blockchain.blockchains.binance.proto.Send.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getInputsFieldBuilder();
        getOutputsFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (inputsBuilder_ == null) {
        inputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        inputsBuilder_.clear();
      }
      if (outputsBuilder_ == null) {
        outputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        outputsBuilder_.clear();
      }
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tangem.blockchain.blockchains.binance.proto.Transaction.internal_static_transaction_Send_descriptor;
    }

    @Override
    public com.tangem.blockchain.blockchains.binance.proto.Send getDefaultInstanceForType() {
      return com.tangem.blockchain.blockchains.binance.proto.Send.getDefaultInstance();
    }

    @Override
    public com.tangem.blockchain.blockchains.binance.proto.Send build() {
      com.tangem.blockchain.blockchains.binance.proto.Send result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public com.tangem.blockchain.blockchains.binance.proto.Send buildPartial() {
      com.tangem.blockchain.blockchains.binance.proto.Send result = new com.tangem.blockchain.blockchains.binance.proto.Send(this);
      int from_bitField0_ = bitField0_;
      if (inputsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          inputs_ = java.util.Collections.unmodifiableList(inputs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.inputs_ = inputs_;
      } else {
        result.inputs_ = inputsBuilder_.build();
      }
      if (outputsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.outputs_ = outputs_;
      } else {
        result.outputs_ = outputsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tangem.blockchain.blockchains.binance.proto.Send) {
        return mergeFrom((com.tangem.blockchain.blockchains.binance.proto.Send)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tangem.blockchain.blockchains.binance.proto.Send other) {
      if (other == com.tangem.blockchain.blockchains.binance.proto.Send.getDefaultInstance()) return this;
      if (inputsBuilder_ == null) {
        if (!other.inputs_.isEmpty()) {
          if (inputs_.isEmpty()) {
            inputs_ = other.inputs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInputsIsMutable();
            inputs_.addAll(other.inputs_);
          }
          onChanged();
        }
      } else {
        if (!other.inputs_.isEmpty()) {
          if (inputsBuilder_.isEmpty()) {
            inputsBuilder_.dispose();
            inputsBuilder_ = null;
            inputs_ = other.inputs_;
            bitField0_ = (bitField0_ & ~0x00000001);
            inputsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInputsFieldBuilder() : null;
          } else {
            inputsBuilder_.addAllMessages(other.inputs_);
          }
        }
      }
      if (outputsBuilder_ == null) {
        if (!other.outputs_.isEmpty()) {
          if (outputs_.isEmpty()) {
            outputs_ = other.outputs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutputsIsMutable();
            outputs_.addAll(other.outputs_);
          }
          onChanged();
        }
      } else {
        if (!other.outputs_.isEmpty()) {
          if (outputsBuilder_.isEmpty()) {
            outputsBuilder_.dispose();
            outputsBuilder_ = null;
            outputs_ = other.outputs_;
            bitField0_ = (bitField0_ & ~0x00000002);
            outputsBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOutputsFieldBuilder() : null;
          } else {
            outputsBuilder_.addAllMessages(other.outputs_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.tangem.blockchain.blockchains.binance.proto.Send parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.tangem.blockchain.blockchains.binance.proto.Send) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Input> inputs_ =
      java.util.Collections.emptyList();
    private void ensureInputsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        inputs_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Input>(inputs_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tangem.blockchain.blockchains.binance.proto.Send.Input, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder> inputsBuilder_;

    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Input> getInputsList() {
      if (inputsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(inputs_);
      } else {
        return inputsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public int getInputsCount() {
      if (inputsBuilder_ == null) {
        return inputs_.size();
      } else {
        return inputsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Input getInputs(int index) {
      if (inputsBuilder_ == null) {
        return inputs_.get(index);
      } else {
        return inputsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder setInputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Input value) {
      if (inputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInputsIsMutable();
        inputs_.set(index, value);
        onChanged();
      } else {
        inputsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder setInputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder builderForValue) {
      if (inputsBuilder_ == null) {
        ensureInputsIsMutable();
        inputs_.set(index, builderForValue.build());
        onChanged();
      } else {
        inputsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder addInputs(com.tangem.blockchain.blockchains.binance.proto.Send.Input value) {
      if (inputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInputsIsMutable();
        inputs_.add(value);
        onChanged();
      } else {
        inputsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder addInputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Input value) {
      if (inputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInputsIsMutable();
        inputs_.add(index, value);
        onChanged();
      } else {
        inputsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder addInputs(
        com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder builderForValue) {
      if (inputsBuilder_ == null) {
        ensureInputsIsMutable();
        inputs_.add(builderForValue.build());
        onChanged();
      } else {
        inputsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder addInputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder builderForValue) {
      if (inputsBuilder_ == null) {
        ensureInputsIsMutable();
        inputs_.add(index, builderForValue.build());
        onChanged();
      } else {
        inputsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder addAllInputs(
        Iterable<? extends com.tangem.blockchain.blockchains.binance.proto.Send.Input> values) {
      if (inputsBuilder_ == null) {
        ensureInputsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputs_);
        onChanged();
      } else {
        inputsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder clearInputs() {
      if (inputsBuilder_ == null) {
        inputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        inputsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public Builder removeInputs(int index) {
      if (inputsBuilder_ == null) {
        ensureInputsIsMutable();
        inputs_.remove(index);
        onChanged();
      } else {
        inputsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder getInputsBuilder(
        int index) {
      return getInputsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder getInputsOrBuilder(
        int index) {
      if (inputsBuilder_ == null) {
        return inputs_.get(index);  } else {
        return inputsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder>
         getInputsOrBuilderList() {
      if (inputsBuilder_ != null) {
        return inputsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(inputs_);
      }
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder addInputsBuilder() {
      return getInputsFieldBuilder().addBuilder(
          com.tangem.blockchain.blockchains.binance.proto.Send.Input.getDefaultInstance());
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder addInputsBuilder(
        int index) {
      return getInputsFieldBuilder().addBuilder(
          index, com.tangem.blockchain.blockchains.binance.proto.Send.Input.getDefaultInstance());
    }
    /**
     * <code>repeated .transaction.Send.Input inputs = 1;</code>
     */
    public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder>
         getInputsBuilderList() {
      return getInputsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tangem.blockchain.blockchains.binance.proto.Send.Input, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder>
        getInputsFieldBuilder() {
      if (inputsBuilder_ == null) {
        inputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tangem.blockchain.blockchains.binance.proto.Send.Input, com.tangem.blockchain.blockchains.binance.proto.Send.Input.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.InputOrBuilder>(
                inputs_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        inputs_ = null;
      }
      return inputsBuilder_;
    }

    private java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Output> outputs_ =
      java.util.Collections.emptyList();
    private void ensureOutputsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        outputs_ = new java.util.ArrayList<com.tangem.blockchain.blockchains.binance.proto.Send.Output>(outputs_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tangem.blockchain.blockchains.binance.proto.Send.Output, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder> outputsBuilder_;

    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Output> getOutputsList() {
      if (outputsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(outputs_);
      } else {
        return outputsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public int getOutputsCount() {
      if (outputsBuilder_ == null) {
        return outputs_.size();
      } else {
        return outputsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Output getOutputs(int index) {
      if (outputsBuilder_ == null) {
        return outputs_.get(index);
      } else {
        return outputsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder setOutputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Output value) {
      if (outputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputsIsMutable();
        outputs_.set(index, value);
        onChanged();
      } else {
        outputsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder setOutputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder builderForValue) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.set(index, builderForValue.build());
        onChanged();
      } else {
        outputsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder addOutputs(com.tangem.blockchain.blockchains.binance.proto.Send.Output value) {
      if (outputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputsIsMutable();
        outputs_.add(value);
        onChanged();
      } else {
        outputsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder addOutputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Output value) {
      if (outputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputsIsMutable();
        outputs_.add(index, value);
        onChanged();
      } else {
        outputsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder addOutputs(
        com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder builderForValue) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.add(builderForValue.build());
        onChanged();
      } else {
        outputsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder addOutputs(
        int index, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder builderForValue) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.add(index, builderForValue.build());
        onChanged();
      } else {
        outputsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder addAllOutputs(
        Iterable<? extends com.tangem.blockchain.blockchains.binance.proto.Send.Output> values) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputs_);
        onChanged();
      } else {
        outputsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder clearOutputs() {
      if (outputsBuilder_ == null) {
        outputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        outputsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public Builder removeOutputs(int index) {
      if (outputsBuilder_ == null) {
        ensureOutputsIsMutable();
        outputs_.remove(index);
        onChanged();
      } else {
        outputsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder getOutputsBuilder(
        int index) {
      return getOutputsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      if (outputsBuilder_ == null) {
        return outputs_.get(index);  } else {
        return outputsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public java.util.List<? extends com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder>
         getOutputsOrBuilderList() {
      if (outputsBuilder_ != null) {
        return outputsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(outputs_);
      }
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder addOutputsBuilder() {
      return getOutputsFieldBuilder().addBuilder(
          com.tangem.blockchain.blockchains.binance.proto.Send.Output.getDefaultInstance());
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder addOutputsBuilder(
        int index) {
      return getOutputsFieldBuilder().addBuilder(
          index, com.tangem.blockchain.blockchains.binance.proto.Send.Output.getDefaultInstance());
    }
    /**
     * <code>repeated .transaction.Send.Output outputs = 2;</code>
     */
    public java.util.List<com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder>
         getOutputsBuilderList() {
      return getOutputsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tangem.blockchain.blockchains.binance.proto.Send.Output, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder>
        getOutputsFieldBuilder() {
      if (outputsBuilder_ == null) {
        outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tangem.blockchain.blockchains.binance.proto.Send.Output, com.tangem.blockchain.blockchains.binance.proto.Send.Output.Builder, com.tangem.blockchain.blockchains.binance.proto.Send.OutputOrBuilder>(
                outputs_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        outputs_ = null;
      }
      return outputsBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:transaction.Send)
  }

  // @@protoc_insertion_point(class_scope:transaction.Send)
  private static final com.tangem.blockchain.blockchains.binance.proto.Send DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tangem.blockchain.blockchains.binance.proto.Send();
  }

  public static com.tangem.blockchain.blockchains.binance.proto.Send getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Send>
      PARSER = new com.google.protobuf.AbstractParser<Send>() {
    @Override
    public Send parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Send(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Send> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Send> getParserForType() {
    return PARSER;
  }

  @Override
  public com.tangem.blockchain.blockchains.binance.proto.Send getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

