// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.tangem.domain.models.scan

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class CardDTO_UserSettingsJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<CardDTO.UserSettings>() {
  private val options: JsonReader.Options = JsonReader.Options.of("isUserCodeRecoveryAllowed")

  private val booleanAdapter: JsonAdapter<Boolean> = moshi.adapter(Boolean::class.java, emptySet(),
      "isUserCodeRecoveryAllowed")

  public override fun toString(): String = buildString(42) {
      append("GeneratedJsonAdapter(").append("CardDTO.UserSettings").append(')') }

  public override fun fromJson(reader: JsonReader): CardDTO.UserSettings {
    var isUserCodeRecoveryAllowed: Boolean? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> isUserCodeRecoveryAllowed = booleanAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("isUserCodeRecoveryAllowed", "isUserCodeRecoveryAllowed",
            reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return CardDTO.UserSettings(
        isUserCodeRecoveryAllowed = isUserCodeRecoveryAllowed ?:
            throw Util.missingProperty("isUserCodeRecoveryAllowed", "isUserCodeRecoveryAllowed",
            reader)
    )
  }

  public override fun toJson(writer: JsonWriter, value_: CardDTO.UserSettings?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("isUserCodeRecoveryAllowed")
    booleanAdapter.toJson(writer, value_.isUserCodeRecoveryAllowed)
    writer.endObject()
  }
}