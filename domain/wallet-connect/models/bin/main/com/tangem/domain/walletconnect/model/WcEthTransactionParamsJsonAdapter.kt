// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.tangem.domain.walletconnect.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class WcEthTransactionParamsJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<WcEthTransactionParams>() {
  private val options: JsonReader.Options = JsonReader.Options.of("from", "to", "data", "gas",
      "gasPrice", "value", "nonce")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "from")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "to")

  public override fun toString(): String = buildString(44) {
      append("GeneratedJsonAdapter(").append("WcEthTransactionParams").append(')') }

  public override fun fromJson(reader: JsonReader): WcEthTransactionParams {
    var from: String? = null
    var to: String? = null
    var data_: String? = null
    var gas: String? = null
    var gasPrice: String? = null
    var value__: String? = null
    var nonce: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> from = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("from", "from",
            reader)
        1 -> to = nullableStringAdapter.fromJson(reader)
        2 -> data_ = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("data_", "data",
            reader)
        3 -> gas = nullableStringAdapter.fromJson(reader)
        4 -> gasPrice = nullableStringAdapter.fromJson(reader)
        5 -> value__ = nullableStringAdapter.fromJson(reader)
        6 -> nonce = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return WcEthTransactionParams(
        from = from ?: throw Util.missingProperty("from", "from", reader),
        to = to,
        `data` = data_ ?: throw Util.missingProperty("data_", "data", reader),
        gas = gas,
        gasPrice = gasPrice,
        `value` = value__,
        nonce = nonce
    )
  }

  public override fun toJson(writer: JsonWriter, value_: WcEthTransactionParams?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("from")
    stringAdapter.toJson(writer, value_.from)
    writer.name("to")
    nullableStringAdapter.toJson(writer, value_.to)
    writer.name("data")
    stringAdapter.toJson(writer, value_.`data`)
    writer.name("gas")
    nullableStringAdapter.toJson(writer, value_.gas)
    writer.name("gasPrice")
    nullableStringAdapter.toJson(writer, value_.gasPrice)
    writer.name("value")
    nullableStringAdapter.toJson(writer, value_.`value`)
    writer.name("nonce")
    nullableStringAdapter.toJson(writer, value_.nonce)
    writer.endObject()
  }
}