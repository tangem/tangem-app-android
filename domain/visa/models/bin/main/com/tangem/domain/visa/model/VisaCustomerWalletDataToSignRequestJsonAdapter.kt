// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.tangem.domain.visa.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class VisaCustomerWalletDataToSignRequestJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<VisaCustomerWalletDataToSignRequest>() {
  private val options: JsonReader.Options = JsonReader.Options.of("orderId", "card_wallet_address",
      "customer_wallet_address")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "orderId")

  public override fun toString(): String = buildString(57) {
      append("GeneratedJsonAdapter(").append("VisaCustomerWalletDataToSignRequest").append(')') }

  public override fun fromJson(reader: JsonReader): VisaCustomerWalletDataToSignRequest {
    var orderId: String? = null
    var cardWalletAddress: String? = null
    var customerWalletAddress: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> orderId = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("orderId",
            "orderId", reader)
        1 -> cardWalletAddress = stringAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("cardWalletAddress", "card_wallet_address", reader)
        2 -> customerWalletAddress = stringAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("customerWalletAddress", "customer_wallet_address", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return VisaCustomerWalletDataToSignRequest(
        orderId = orderId ?: throw Util.missingProperty("orderId", "orderId", reader),
        cardWalletAddress = cardWalletAddress ?: throw Util.missingProperty("cardWalletAddress",
            "card_wallet_address", reader),
        customerWalletAddress = customerWalletAddress ?:
            throw Util.missingProperty("customerWalletAddress", "customer_wallet_address", reader)
    )
  }

  public override fun toJson(writer: JsonWriter, value_: VisaCustomerWalletDataToSignRequest?):
      Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("orderId")
    stringAdapter.toJson(writer, value_.orderId)
    writer.name("card_wallet_address")
    stringAdapter.toJson(writer, value_.cardWalletAddress)
    writer.name("customer_wallet_address")
    stringAdapter.toJson(writer, value_.customerWalletAddress)
    writer.endObject()
  }
}