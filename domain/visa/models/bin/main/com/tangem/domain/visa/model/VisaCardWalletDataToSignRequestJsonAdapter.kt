// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "UNUSED_PARAMETER", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.tangem.domain.visa.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class VisaCardWalletDataToSignRequestJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<VisaCardWalletDataToSignRequest>() {
  private val options: JsonReader.Options = JsonReader.Options.of("activationOrderInfo",
      "cardWalletAddress")

  private val visaActivationOrderInfoAdapter: JsonAdapter<VisaActivationOrderInfo> =
      moshi.adapter(VisaActivationOrderInfo::class.java, emptySet(), "activationOrderInfo")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "cardWalletAddress")

  public override fun toString(): String = buildString(53) {
      append("GeneratedJsonAdapter(").append("VisaCardWalletDataToSignRequest").append(')') }

  public override fun fromJson(reader: JsonReader): VisaCardWalletDataToSignRequest {
    var activationOrderInfo: VisaActivationOrderInfo? = null
    var cardWalletAddress: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> activationOrderInfo = visaActivationOrderInfoAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("activationOrderInfo", "activationOrderInfo", reader)
        1 -> cardWalletAddress = stringAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("cardWalletAddress", "cardWalletAddress", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return VisaCardWalletDataToSignRequest(
        activationOrderInfo = activationOrderInfo ?:
            throw Util.missingProperty("activationOrderInfo", "activationOrderInfo", reader),
        cardWalletAddress = cardWalletAddress ?: throw Util.missingProperty("cardWalletAddress",
            "cardWalletAddress", reader)
    )
  }

  public override fun toJson(writer: JsonWriter, value_: VisaCardWalletDataToSignRequest?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("activationOrderInfo")
    visaActivationOrderInfoAdapter.toJson(writer, value_.activationOrderInfo)
    writer.name("cardWalletAddress")
    stringAdapter.toJson(writer, value_.cardWalletAddress)
    writer.endObject()
  }
}